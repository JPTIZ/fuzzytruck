
function_block truck

var_input
    x: real;
    y: real;
    dir: real;
end_var

var_output
    action: real;
end_var

fuzzify x
    term left   := (0.0, 1) (0.5, 0);
    term center := (0.0, 0) (0.5, 1) (1.0, 0);
    term right  := (0.5, 0) (1, 1);
end_fuzzify

fuzzify y
    term far   := (0.0, 0) (1.00, 1);
    // term not far := (0.33, 0) (1.0, 1);
end_fuzzify

fuzzify dir
    term west      := (  0, 1) ( 90, 0) (270, 0) (360, 1);

    term south     := (  0, 0) ( 90, 1) (180, 0);

    term east      := ( 90, 0) (180, 1) (270, 0);

    term north     := (180, 0) (270, 1) (360, 0);

    // term really_south := ( 80, 0) ( 90, 1) (100, 0);
end_fuzzify

defuzzify action
    term left  := (-1, 1) (0, 0);
    term none  := (-1, 0) (0, 1) (1, 0);
    term right :=         (0, 0) (1, 1);

    method: cog;
    default := 0;
end_defuzzify

ruleblock truck_rules
    and: min;
    act: min;
    accu: max;



    rule 1: if  x is left  and  dir is north  then action is left 
    rule 2: if  x is right  and  dir is north  then action is right 
    rule 3: if  x is center  and  dir is east  then action is left 
    rule 4: if  x is center  and  dir is west  then action is right 
    rule 5: if  x is center  and  dir is north  then action is right 
    rule 6: if  x is left  and  y is far  and  dir is south  then action is right 
    rule 7: if  x is left  and  y is far  and  dir is east  then action is left 
    rule 8: if  x is right  and  y is far  and  dir is south  then action is left 
    rule 9: if  x is right  and  y is far  and  dir is west  then action is right 
end_ruleblock

end_function_block
